# 字符串有三种定义方式
# 'string'单引号定义
# "string"双引号定义
# """string"""三引号定义, 用变量接收时为字符串, 不接收时为注释, 可跨行定义字符串
# 当字符串中有 ' 或 " 时可用 \ 转义字符 \' 或 \"

"""
    字符串拼接
    语法：字符串1 + 字符串2 + 字符串3 + ... +字符串N
"""
print("abc" + "def")
# 也可以和变量拼接
name = "Glycoene"
print("我是" + name)
# 字符串与数字拼接时需将数子转换为字符串
age = 19
print("我" + str(age) + "岁了")

"""
    字符串格式化
    语法："字符串1%s字符串2%s字符串3%s...字符串N" % (str1, str2, str3, ..., strN)
    多个变量占位, 变量要用括号括起来, 并按照占位的顺序填入
"""
print("我是%s" % name)
# 字符串格式化同时也方便字符串与数字拼接, 会自动将数字转换为字符串
print("我是%s, 我%s岁了" % (name, age))
# 字符串中的格式匹配符可更换为与数据对应的格式匹配符
weight = 61.5
print("我是%s, 我%d岁了, 体重%.2f千克" % (name, age, weight))
# %s 字符串
# %d 整型
# %f 浮点型
# 可在 % 和字母之间添加 m.n 实现精度控制, m表示宽度限制(不足在前面用空格补齐, 留空表示无限制), n表示保留小数点的位数(四舍五入)

"""
    字符串格式化2
    语法：f"字符串1{变量1}字符串2{变量2}...字符串N{变量N}"
    不关心变量类型, 原样输出变量, 不做精度控制
"""
print(f"我是{name}, 我{age}岁了, 体重{weight}千克")

# 以上所有变量位置都可用表达式代替